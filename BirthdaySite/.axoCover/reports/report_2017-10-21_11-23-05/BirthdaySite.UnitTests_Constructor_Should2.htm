<!DOCTYPE html>
<html data-ng-app="coverageApp">
<head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=EDGE,chrome=1" />
<title>BirthdaySite.UnitTests.ServiceTests.FriendListsTests.Constructor_Should - Coverage Report</title>
<link rel="stylesheet" type="text/css" href="report.css" />
</head><body data-ng-controller="DetailViewCtrl"><div class="container"><div class="containerleft">
<h1>Summary</h1>
<table class="overview table-fixed">
<colgroup>
<col class="column135" />
<col />
</colgroup>
<tbody>
<tr><th>Class:</th><td>BirthdaySite.UnitTests.ServiceTests.FriendListsTests.Constructor_Should</td></tr>
<tr><th>Assembly:</th><td>BirthdaySite.UnitTests</td></tr>
<tr><th>File(s):</th><td><a href="#CUsersPCDesktopProjectState00InitialState2134CopyBirthdaysSiteBirthdaySiteBirthdaySiteUnitTestsServiceTestsFriendListsTestsConstructor_Shouldcs" data-ng-click="navigateToHash('#CUsersPCDesktopProjectState00InitialState2134CopyBirthdaysSiteBirthdaySiteBirthdaySiteUnitTestsServiceTestsFriendListsTestsConstructor_Shouldcs')">C:\Users\PC\Desktop\ProjectState\00.InitialState\21.34Copy\BirthdaysSite\BirthdaySite\BirthdaySite.UnitTests\ServiceTests\FriendListsTests\Constructor_Should.cs</a></td></tr>
<tr><th>Covered lines:</th><td>10</td></tr>
<tr><th>Uncovered lines:</th><td>0</td></tr>
<tr><th>Coverable lines:</th><td>10</td></tr>
<tr><th>Total lines:</th><td>32</td></tr>
<tr><th>Line coverage:</th><td>100%</td></tr>
</tbody>
</table>
<h1>Metrics</h1>
<table class="overview table-fixed">
<thead><tr><th>Method</th><th>Cyclomatic complexity <a href="https://en.wikipedia.org/wiki/Cyclomatic_complexity" class="info">&nbsp;</a></th><th>NPath complexity <a href="https://modess.io/npath-complexity-cyclomatic-complexity-explained" class="info">&nbsp;</a></th><th>Sequence coverage <a href="https://en.wikipedia.org/wiki/Code_coverage" class="info">&nbsp;</a></th><th>Branch coverage <a href="https://en.wikipedia.org/wiki/Code_coverage" class="info">&nbsp;</a></th><th>Crap Score <a href="https://googletesting.blogspot.de/2011/02/this-code-is-crap.html" class="info">&nbsp;</a></th></tr></thead>
<tbody>
<tr><td title="System.Void BirthdaySite.UnitTests.ServiceTests.FriendListsTests.Constructor_Should::Constructor_ShouldInitialize_Correctly()">Constructor_ShouldInitialize_Correctly()</td><td>1</td><td>0</td><td>100</td><td>100</td><td>1</td></tr>
<tr><td title="System.Void BirthdaySite.UnitTests.ServiceTests.FriendListsTests.Constructor_Should::Constructor_ShouldThrow_WhenArgumentIsNull()">Constructor_ShouldThrow_WhenArgumentIsNull()</td><td>2</td><td>0</td><td>100</td><td>100</td><td>2</td></tr>
</tbody>
</table>
<h1>File(s)</h1>
<h2 id="CUsersPCDesktopProjectState00InitialState2134CopyBirthdaysSiteBirthdaySiteBirthdaySiteUnitTestsServiceTestsFriendListsTestsConstructor_Shouldcs">C:\Users\PC\Desktop\ProjectState\00.InitialState\21.34Copy\BirthdaysSite\BirthdaySite\BirthdaySite.UnitTests\ServiceTests\FriendListsTests\Constructor_Should.cs</h2>
<table class="lineAnalysis">
<thead><tr><th></th><th>#</th><th>Line</th><th></th><th>Line coverage</th></tr></thead>
<tbody>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line1"></a><code>1</code></td><td></td><td class="lightgray"><code>using&nbsp;Microsoft.VisualStudio.TestTools.UnitTesting;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line2"></a><code>2</code></td><td></td><td class="lightgray"><code>using&nbsp;Moq;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line3"></a><code>3</code></td><td></td><td class="lightgray"><code>using&nbsp;MVCTemplate.Data.Common;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line4"></a><code>4</code></td><td></td><td class="lightgray"><code>using&nbsp;MVCTemplate.Data.Models;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line5"></a><code>5</code></td><td></td><td class="lightgray"><code>using&nbsp;MVCTemplate.Services.Data;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line6"></a><code>6</code></td><td></td><td class="lightgray"><code>using&nbsp;System;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line7"></a><code>7</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line8"></a><code>8</code></td><td></td><td class="lightgray"><code>namespace&nbsp;BirthdaySite.UnitTests.ServiceTests.FriendListsTests</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line9"></a><code>9</code></td><td></td><td class="lightgray"><code>{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line10"></a><code>10</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;[TestClass]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line11"></a><code>11</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;class&nbsp;Constructor_Should</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line12"></a><code>12</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line13"></a><code>13</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[TestMethod]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line14"></a><code>14</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Constructor_ShouldInitialize_Correctly()</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}, 'M92': {'VC': '1', 'LVS': 'green'}, 'M93': {'VC': '0', 'LVS': 'red'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><a id="file0_line15"></a><code>15</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}, 'M92': {'VC': '1', 'LVS': 'green'}, 'M93': {'VC': '0', 'LVS': 'red'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><a id="file0_line16"></a><code>16</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;repoMocked&nbsp;=&nbsp;new&nbsp;Mock&lt;IDbRepository&lt;FriendsList&gt;&gt;();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line17"></a><code>17</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}, 'M92': {'VC': '1', 'LVS': 'green'}, 'M93': {'VC': '0', 'LVS': 'red'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><a id="file0_line18"></a><code>18</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;service&nbsp;=&nbsp;new&nbsp;FriendListService(repoMocked.Object);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line19"></a><code>19</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}, 'M92': {'VC': '1', 'LVS': 'green'}, 'M93': {'VC': '0', 'LVS': 'red'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><a id="file0_line20"></a><code>20</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.IsNotNull(service);</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}, 'M92': {'VC': '1', 'LVS': 'green'}, 'M93': {'VC': '0', 'LVS': 'red'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><a id="file0_line21"></a><code>21</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line22"></a><code>22</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line23"></a><code>23</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[TestMethod]</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line24"></a><code>24</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;Constructor_ShouldThrow_WhenArgumentIsNull()</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}, 'M92': {'VC': '0', 'LVS': 'red'}, 'M93': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><a id="file0_line25"></a><code>25</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}, 'M92': {'VC': '0', 'LVS': 'red'}, 'M93': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><a id="file0_line26"></a><code>26</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;repoMocked&nbsp;=&nbsp;new&nbsp;Mock&lt;IDbRepository&lt;FriendsList&gt;&gt;();</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line27"></a><code>27</code></td><td></td><td class="lightgray"><code></code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}, 'M92': {'VC': '0', 'LVS': 'red'}, 'M93': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><a id="file0_line28"></a><code>28</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Assert.ThrowsException&lt;ArgumentNullException&gt;(()&nbsp;=&gt;</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '2', 'LVS': 'green'}, 'M92': {'VC': '0', 'LVS': 'red'}, 'M93': {'VC': '2', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">2</td><td class="rightmargin right"><a id="file0_line29"></a><code>29</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;new&nbsp;FriendListService(null));</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '1', 'LVS': 'green'}, 'M92': {'VC': '0', 'LVS': 'red'}, 'M93': {'VC': '1', 'LVS': 'green'}}"><td class="green">&nbsp;</td><td class="leftmargin rightmargin right">1</td><td class="rightmargin right"><a id="file0_line30"></a><code>30</code></td><td></td><td class="lightgreen"><code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line31"></a><code>31</code></td><td></td><td class="lightgray"><code>&nbsp;&nbsp;&nbsp;&nbsp;}</code></td></tr>
<tr data-coverage="{'AllTestMethods': {'VC': '', 'LVS': 'gray'}, 'M92': {'VC': '', 'LVS': 'gray'}, 'M93': {'VC': '', 'LVS': 'gray'}}"><td class="gray">&nbsp;</td><td class="leftmargin rightmargin right"></td><td class="rightmargin right"><a id="file0_line32"></a><code>32</code></td><td></td><td class="lightgray"><code>}</code></td></tr>
</tbody>
</table>
<div class="footer">Generated by: ReportGenerator 2.5.6.0<br />21.10.2017 г. - 11:23:07 ч.<br /><a href="https://github.com/danielpalme/ReportGenerator">GitHub</a> | <a href="http://www.palmmedia.de">www.palmmedia.de</a></div></div>
<div class="containerright">
<div class="containerrightfixed">
<h1>Coverage by test methods</h1>
<label title="All"><input type="radio" name="method" value="AllTestMethods" data-ng-change="switchTestMethod('AllTestMethods')" data-ng-model="selectedTestMethod" />All</label>
<br /><label title="System.Void BirthdaySite.UnitTests.ServiceTests.FriendListsTests.Constructor_Should::Constructor_ShouldInitialize_Correctly()"><input type="radio" name="method" value="M92" data-ng-change="switchTestMethod('M92')" data-ng-model="selectedTestMethod" />Constructor_Should::Constructor_ShouldInitialize_Correctly()</label>
<br /><label title="System.Void BirthdaySite.UnitTests.ServiceTests.FriendListsTests.Constructor_Should::Constructor_ShouldThrow_WhenArgumentIsNull()"><input type="radio" name="method" value="M93" data-ng-change="switchTestMethod('M93')" data-ng-model="selectedTestMethod" />Constructor_Should::Constructor_ShouldThrow_WhenArgumentIsNull()</label>
<h1>Methods/Properties</h1>
<a class="method" href="#file0_line15" data-ng-click="navigateToHash('#file0_line15')" title="Constructor_ShouldInitialize_Correctly()">Constructor_ShouldInitialize_Correctly()</a><br />
<a class="method" href="#file0_line25" data-ng-click="navigateToHash('#file0_line25')" title="Constructor_ShouldThrow_WhenArgumentIsNull()">Constructor_ShouldThrow_WhenArgumentIsNull()</a><br />
<br/></div>
</div></div>
<script type="text/javascript" src="combined.js"></script>
</body></html>